Supriyai: INTROGreetings everybody, 
We are from REMO, …..
I am …… So let’s begin then….

Mansi: REMO = IFH
 wondering what the equation means ?
 Let me explain then
Work from home is the new normal, how does an interview from home sound?
This is what primarily inspired us, but thinking of it , we also address many other potential problems that are encountered while conducting interviews.
Testing of technical skills requires screen-sharing or giving remote access, neither of which respect the privacy of the candidate. More so, a candidate’s portfolio is an important parameter to gauge the level of expertise and ability, these are accessed by opening multiple tabs and going back and forth.
So here we are with REMO an integrated interface for conduction of remote interviews.


Mansi: Features
So let’s get ready for an online interview. 
A face-to-a-name enables better interaction. So there is a need for a video calling application. 
Expressing ideas by thinking out aloud is an important part of an interview, then what’s better than a realtime whiteboard for that.
Showcasing projects highlights one’s level of expertise. So don’t forget to document your work on a platform like GitHub.
Not all things can be said orally so a chat application is a need.
Most importantly, a platform to test any kind of technical skill and is accesseble by both the interviewer and interviewee
A Video calling interface
A whiteboard
Access to github profile
Chat
And a virtual environment


These features put together is REMO

Namya : Tech Stack
We have used WebRTC to establish to a peer to peer connection via which video and audio are transmitted
And the Github V3 Rest API to display the candidate's profile
Chat and whiteboard were built wilth Socket IO, to transmit real-time data and are hosted on Heroku
Nuvepro intro:
And we have used their API's to spin up the virtual environment

Namya : Challenges
- While making the whiteboard we had to transfer data between two people connected in a room in real time. But we did not understand how to integrate a runtime like Node js in our website. For this purpose we have hosted the whiteboard and chat in Heroku and are accessed on our website via the url and query strings.
- When we were integrating with github we have made a few mistakes, as a result of which the video was not working .As newbies to Git, going back was as scary as going back in time. Then we learnt about git reset, it saved our day and we loved git ever since then.
Another problem was passing the room id from the pre-interview page to the interview room, we have achieved that using local storage with the help of which we were able to store the room id in the browser for that particular session.

Namya: Challenges

Namya: Statistics
Supriya : Let’s have a look at the statistics of our work.
438 commits, with over 3500 lines of code and apart from these it took 4-5hrs of dedicated work every single day for the past two months, and tons of enthusiasm and determination to build REMO.

Namya: Learning

Supriya: Future

Questions

Why did u build this/motivation?
Scene after COVID?
How is it better than the existing ones?
How have u got access to the lab?
Why is there no login ?
What are sockets???
Why not teams?
Hassle
I would go with ready-made than making one
Because, don't want to spend time setting up something for one day which I won't use the other day.
